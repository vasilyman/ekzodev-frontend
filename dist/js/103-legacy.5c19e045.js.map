{"version":3,"file":"js/103-legacy.5c19e045.js","mappings":"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","sources":["webpack://cp-2022-frontend-ekzodev/../../../src/components/VDivider/VDivider.ts","webpack://cp-2022-frontend-ekzodev/../../../src/mixins/groupable/index.ts","webpack://cp-2022-frontend-ekzodev/../../../src/mixins/toggleable/index.ts","webpack://cp-2022-frontend-ekzodev/./src/api/RegionsApi.js","webpack://cp-2022-frontend-ekzodev/./src/store/modules/Regions.js","webpack://cp-2022-frontend-ekzodev/./src/components/SelectRegion.vue?58e7","webpack://cp-2022-frontend-ekzodev/src/components/SelectRegion.vue","webpack://cp-2022-frontend-ekzodev/./src/components/SelectRegion.vue?66a1","webpack://cp-2022-frontend-ekzodev/../../../src/components/VAutocomplete/VAutocomplete.ts","webpack://cp-2022-frontend-ekzodev/./src/components/SelectRegion.vue"],"sourcesContent":["// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n","// Mixins\nimport { Registrable, inject as RegistrableInject } from '../registrable'\n\n// Utilities\nimport { ExtractVue } from '../../util/mixins'\nimport { VueConstructor } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport type Groupable<T extends string, C extends VueConstructor | null = null> = VueConstructor<ExtractVue<Registrable<T, C>> & {\n  activeClass: string\n  isActive: boolean\n  disabled: boolean\n  groupClasses: object\n  toggle (): void\n}>\n\nexport function factory<T extends string, C extends VueConstructor | null = null> (\n  namespace: T,\n  child?: string,\n  parent?: string\n): Groupable<T, C> {\n  return RegistrableInject<T, C>(namespace, child, parent).extend({\n    name: 'groupable',\n\n    props: {\n      activeClass: {\n        type: String,\n        default (): string | undefined {\n          if (!this[namespace]) return undefined\n\n          return this[namespace].activeClass\n        },\n      } as any as PropValidator<string>,\n      disabled: Boolean,\n    },\n\n    data () {\n      return {\n        isActive: false,\n      }\n    },\n\n    computed: {\n      groupClasses (): object {\n        if (!this.activeClass) return {}\n\n        return {\n          [this.activeClass]: this.isActive,\n        }\n      },\n    },\n\n    created () {\n      this[namespace] && (this[namespace] as any).register(this)\n    },\n\n    beforeDestroy () {\n      this[namespace] && (this[namespace] as any).unregister(this)\n    },\n\n    methods: {\n      toggle () {\n        this.$emit('change')\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Groupable = factory('itemGroup')\n\nexport default Groupable\n","import Vue, { VueConstructor } from 'vue'\n\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\nexport function factory (prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n\n    model: { prop, event },\n\n    props: {\n      [prop]: { required: false },\n    },\n\n    data () {\n      return {\n        isActive: !!this[prop],\n      }\n    },\n\n    watch: {\n      [prop] (val) {\n        this.isActive = !!val\n      },\n      isActive (val) {\n        !!val !== this[prop] && this.$emit(event, val)\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Toggleable = factory()\n\nexport default Toggleable\n","import API from './Api';\n\nclass RegionsApi {\n  static getColumns() {\n    return API.request({\n      method: 'GET',\n      url: 'api/v1/regions/getList',\n    });\n  }\n}\n\nexport default RegionsApi;\n","import RegionsApi from '@/api/RegionsApi';\n\nexport default {\n  namespaced: true,\n\n  state: {\n    list: [],\n  },\n\n  mutations: {\n    setList(state, data) {\n      state.list = data;\n    },\n  },\n\n  actions: {\n    async fetchList({ commit }) {\n      try {\n        const { data } = await RegionsApi.getColumns();\n        commit('setList', data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n\n  getters: {\n    getList(state) {\n      return state.list;\n    },\n  },\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-autocomplete',{attrs:{\"items\":_vm.items,\"item-text\":\"region\",\"item-value\":\"id_region\",\"label\":\"Регион\",\"placeholder\":\"Начните печатать\",\"outlined\":\"\",\"rounded\":\"\",\"dense\":\"\",\"clearable\":\"\"},model:{value:(_vm.region),callback:function ($$v) {_vm.region=$$v},expression:\"region\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-autocomplete\n    v-model=\"region\"\n    :items=\"items\"\n    item-text=\"region\"\n    item-value=\"id_region\"\n    label=\"Регион\"\n    placeholder=\"Начните печатать\"\n    outlined\n    rounded\n    dense\n    clearable\n  ></v-autocomplete>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\nimport RegionsModule from '@/store/modules/Regions';\n\nexport default {\n  name: 'SelectRegion',\n  props: {\n    value: [String, Number],\n  },\n  data() {\n    return {\n      region: null,\n    };\n  },\n  computed: {\n    ...mapGetters('Regions', ['getList']),\n    items() {\n      return this.getList;\n    },\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler(val) {\n        this.region = val;\n      },\n    },\n    region: {\n      handler(region) {\n        this.$emit('input', region);\n      },\n    },\n  },\n  methods: {\n    ...mapActions('Regions', ['fetchList']),\n  },\n  created() {\n    this.fetchList();\n  },\n  beforeCreate() {\n    if (!this.$store.hasModule('Regions')) this.$store.registerModule('Regions', RegionsModule);\n  },\n  destroyed() {\n    if (this.$store.hasModule('Regions')) this.$store.unregisterModule('Regions');\n  },\n};\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectRegion.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectRegion.vue?vue&type=script&lang=js&\"","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex]\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem))\n        } else {\n          this.setMenuIndex(-1)\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex)\n      }\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0)\n          this.$emit('update:list-index', this.$refs.menu.listIndex)\n        }\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      if (!this.multiple && value === '') this.deleteCurrentItem()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./SelectRegion.vue?vue&type=template&id=497f2545&\"\nimport script from \"./SelectRegion.vue?vue&type=script&lang=js&\"\nexport * from \"./SelectRegion.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAutocomplete } from 'vuetify/lib/components/VAutocomplete';\ninstallComponents(component, {VAutocomplete})\n"],"names":["Themeable","name","props","inset","Boolean","vertical","render","h","orientation","this","$attrs","role","class","themeClasses","attrs","on","$listeners","factory","namespace","child","parent","RegistrableInject","extend","activeClass","type","String","default","disabled","data","isActive","computed","groupClasses","created","register","beforeDestroy","unregister","methods","toggle","$emit","prop","event","Vue","model","required","watch","val","Toggleable","RegionsApi","API","method","url","namespaced","state","list","mutations","setList","actions","fetchList","commit","console","log","getters","getList","_vm","_h","$createElement","_c","_self","items","value","callback","$$v","region","expression","staticRenderFns","mapGetters","immediate","handler","mapActions","beforeCreate","destroyed","defaultMenuProps","VSelectMenuProps","offsetY","offsetOverflow","transition","VSelect","allowOverflow","autoSelectFirst","filter","Function","item","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","noFilter","searchInput","lazySearch","classes","selectedIndex","computedItems","filteredItems","selectedValues","selectedItems","map","getValue","hasDisplayedItems","hideSelected","some","hasItem","length","currentRange","selectedItem","getText","isSearching","internalSearch","allItems","getPropertyFromItem","text","get","set","isAnyValueAllowed","isDirty","searchIsDirty","multiple","menuCanShow","isFocused","$_menuProps","contentClass","trim","find","i","valueComparator","internalValue","listData","virtualizedItems","document","addEventListener","onCopy","$refs","input","select","removeEventListener","blur","updateSelf","isMenuActive","hasSlot","oldVal","activateMenu","setSearch","onFilteredItemsChanged","preSelectedItem","menu","listIndex","setMenuIndex","findIndex","$nextTick","getTiles","onInternalSearchChanged","updateMenuDimensions","updateDimensions","changeSelectedIndex","keyCode","keyCodes","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","selectItem","setValue","clearableCallback","genInput","VTextField","mergeData","getObjectValueByPath","autocomplete","domProps","genInputSlot","slot","genSelections","onClick","e","onFocus","isAppendInner","target","onInput","badInput","validity","onKeyDown","ctrlKey","includes","onSpaceDown","onTabDown","onUpDown","preventDefault","setSelectedItems","currentItem","currentItemText","clipboardData","setData","component","VAutocomplete"],"sourceRoot":""}